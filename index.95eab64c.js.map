{"mappings":"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","sources":["src/js/index.js","src/js/homecard.js","src/js/genres.js"],"sourcesContent":["import makeMoviesPosters from './homecard.js';\nimport '../sass/index.scss';\n\n// Variables ----\nconst media_type = 'all';\nconst time_window = 'week';\nlet currentPage = 1;\nlet totalPages = 50;\n\n// Fetch & Render ----\nfunction uploadMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/${media_type}/${time_window}?api_key=0a3a4e00d84de20a8f1b6dfc8a7cdfd5&per_page=18&page=${currentPage}`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nconst render = () => {\n  uploadMovies().then(trendingMovies => {\n    //totalPages = trendingMovies.total_pages;\n    return makeMoviesPosters(trendingMovies);\n  });\n};\n\nrender();\n\n// Paginación ----\n\nconst pages = document.querySelector('.pages');\nconst pagesToShow = 5;\n\nconst paginationH = () => {\n    pages.innerHTML = '';\n\n    const prevBtn = document.createElement('button');\n    prevBtn.textContent = '<';\n    prevBtn.classList.add('pagebtn');\n    prevBtn.disabled = currentPage === 1;\n    prevBtn.addEventListener('click', () => {\n        currentPage--;\n        render();\n        paginationH();\n    });\n    pages.append(prevBtn);\n\n    const first = document.createElement('button');\n    first.textContent = '1';\n    first.classList.add('page');\n    first.disable = currentPage === 1;\n    first.addEventListener('click', () => {\n      currentPage = 1;\n      render();\n      paginationH();\n    });\n    pages.append(first);\n\n    const dots = document.createElement('div');\n    dots.textContent = '...';\n    dots.classList.add('dots');\n    pages.append(dots);\n\n    const st1 = Math.max(currentPage - Math.floor(pagesToShow/2), 1);\n    const st2 = Math.max(currentPage - pagesToShow + 1, 1);\n    const st3 = Math.max(currentPage - pagesToShow + 2, 1);\n\n    let startPage;\n    currentPage === totalPages ? startPage = st2 \n    : currentPage === totalPages - 1 ? startPage = st3 : startPage = st1;\n\n    const endPage = Math.min(startPage + pagesToShow - 1, totalPages);\n    for(let i = startPage; i <= endPage; i++) {\n      const pageButton = document.createElement('button');\n      pageButton.classList.add('page');\n      pageButton.textContent = i;\n      pageButton.disable = i === currentPage;\n\n      i === currentPage ? pageButton.classList.add('activePage') : pageButton.classList.remove('activePage');\n\n      pageButton.addEventListener('click', () => {\n        currentPage = i;\n        render();\n        paginationH();\n      });\n      pages.append(pageButton);\n    };\n\n    const dots1 = document.createElement('div');\n    dots1.textContent = '...';\n    dots1.classList.add('dots');\n    pages.append(dots1);\n\n    const last = document.createElement('button');\n    last.textContent = totalPages;\n    last.classList.add('page');\n    last.disable = currentPage === totalPages\n    last.addEventListener('click', () => {\n      currentPage = totalPages;\n      render();\n      paginationH();\n    });\n    pages.append(last);\n\n    const nextBtn = document.createElement('button');\n    nextBtn.textContent = '>';\n    nextBtn.classList.add('pagebtn');\n    nextBtn.disabled = currentPage === totalPages;\n    nextBtn.addEventListener('click', () => {\n        currentPage++;\n        render();\n        paginationH();\n    });\n    pages.append(nextBtn);\n}\n\npaginationH();\n\nexport { render, paginationH};\n\n","import { genresArr, loadGenres } from \"./genres\";\n\nconst filmsContainer = document.querySelector('.films');\nconst moviesPerPage = 12;\n//let genresArr = [];\n\n// Cargar géneros\n/*function loadGenres() {\n  return fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=0a3a4e00d84de20a8f1b6dfc8a7cdfd5&language=en-US`\n  )\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(array => {\n      genresArr = array.genres;\n      return genresArr;\n    });\n}*/\n\n// Diseño de tarjetas (posters)\n\nfunction makeMoviesPosters(arr) {\n  filmsContainer.innerHTML = '';\n\n  if (genresArr.length === 0) {\n    loadGenres().then(() => {\n      makeMoviesPosters(arr);\n    });\n  }\n\n  const moviesToDisplay = arr.results.slice(0, moviesPerPage);\n \n  const moviesList = moviesToDisplay\n    .map(movie => {\n      const genreNames = movie.genre_ids;\n      const names = [];\n  \n      for (let i = 0; i < genreNames.length; i++) {\n        let genre = genresArr.find(g => g.id === genreNames[i]);\n        if (genre) {\n          names.push(genre.name);\n        } else { \n          continue;\n        }\n      }\n      const gNames = names.join(', ');\n\n      const posterPath = movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` \n        : 'https://via.placeholder.com/500x750?text=No+poster+available';\n\n      return `\n      <div class='films__card'>\n        <img class= \"films__poster\" src=${posterPath}></> \n        <p class= \"films__title\">${movie.title || movie.name}</p>\n        <p class= \"films__details\">${gNames} | ${\n        (movie.release_date && movie.release_date.slice(0, 4)) ||\n        movie.first_air_date.slice(0, 4)\n      }</p>\n        <div class='films__rate'>${movie.vote_average.toFixed(1)}</div>\n      </div>\n    `;\n    })\n    .join('');\n\n  filmsContainer.innerHTML = moviesList;\n}\n\nexport default makeMoviesPosters;\n\n/*\nfunction makeMoviesPosters(arr) {\n  filmsContainer.innerHTML = '';\n\n  if (genresArr.length === 0) {\n    loadGenres().then(() => {\n      makeMoviesPosters(arr);\n    });\n  }\n\n  const moviesToDisplay = arr.results.slice(0, moviesPerPage);\n  const moviesList = moviesToDisplay\n    .map(movie => {\n      const genreNames = movie.genre_ids\n        .map(genreId => {\n          const genre = genresArr.find(g => g.id === genreId);\n          return genre ? genre.name : '';\n        })\n        .join(', ');\n      return `\n      <div class='films__card'>\n        <img class= \"films__poster\" src='https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }'></> \n        <p class= \"films__title\">${movie.title || movie.name}</p>\n        <p class= \"films__details\">${genreNames} | ${\n        (movie.release_date && movie.release_date.slice(0, 4)) ||\n        movie.first_air_date.slice(0, 4)\n      }</p>\n        <div class='films__rate'>${movie.vote_average.toFixed(1)}</div>\n      </div>\n    `;\n    })\n    .join('');\n\n  filmsContainer.innerHTML = moviesList;\n}*/","let genresArr = [];\n\nfunction loadGenres() {\n    return fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=0a3a4e00d84de20a8f1b6dfc8a7cdfd5&language=en-US`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      })\n      .then(array => {\n        genresArr = array.genres;\n        return genresArr;\n      });\n  }\n\n  export { genresArr, loadGenres};"],"names":["$4iEUr","parcelRequire","$44ae6d9db4eaca0f$var$currentPage","$44ae6d9db4eaca0f$var$totalPages","$44ae6d9db4eaca0f$export$b3890eb0ae9dca99","fetch","concat","then","response","ok","Error","status","json","trendingMovies","default","$44ae6d9db4eaca0f$var$pages","document","querySelector","$44ae6d9db4eaca0f$export$3e54f7e56561fb8a","pageButton","createElement","classList","add","textContent","i","disable","remove","addEventListener","append","innerHTML","prevBtn","disabled","first","dots","startPage","st1","Math","max","floor","$44ae6d9db4eaca0f$var$pagesToShow","st2","st3","endPage","min","i1","_loop","dots1","last","nextBtn","$twtVq","$32189398d2b447c4$var$filmsContainer","$32189398d2b447c4$export$2e2bcd8739ae039","$32189398d2b447c4$var$makeMoviesPosters","arr","genresArr","length","loadGenres","moviesList","results","slice","map","movie","genre","find","g","id","genreNames","names","push","name","genre_ids","gNames","join","posterPath","poster_path","title","release_date","first_air_date","vote_average","toFixed","$058be7baf2d85bd2$export$51c2025cefd26e","$058be7baf2d85bd2$export$1ea19b7b0c746bcb","array","genres"],"version":3,"file":"index.95eab64c.js.map"}