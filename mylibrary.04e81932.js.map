{"mappings":"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","sources":["src/js/modal-library.js","src/js/librarycard.js","src/js/mylibrary.js"],"sourcesContent":["import { watchedLocalStorage } from \"./localstorage\";\n\n\nfunction displayMovieDetails(movie) {\n  const modal = document.querySelector(\".modalw\");\n  const title1 = movie.title || movie.name;\n  const title = title1.toUpperCase();\n  const orgtitle1 = movie.original_title || movie.name;\n  const orgtitle = orgtitle1.toUpperCase();\n  //const orgtitle = 'hello'; \n  const popularity = movie.popularity.toFixed(1);\n  const rate = movie.vote_average.toFixed(1);\n  const genres = movie.genres.map(genre => genre.name).join(', ');\n    \n    const modalContent = `\n      <div class=\"modal-header\">\n        \n        <button class=\"modal-close\">&times;</button>\n      </div>\n      <div class='poster_container'>\n        <img class=\"modal-poster\" src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.title}\">\n      </div>\n      <div class='info'>\n        <h3 class=\"modal-title\">${title}</h3>\n\n        <table>\n          <tr>\n            <th class='t1'>Vote / Votes</th>\n            <th><span class='films__rate'>${rate}</span> / ${movie.vote_count}</th>\n          </tr>\n          <tr>\n            <th class='t1'>Popularity</th>\n            <th>${popularity}</th>\n          </tr>\n          <tr>\n            <th class='t1'>Original Title</th>\n            <th>${orgtitle}</th>\n          </tr>\n          <tr>\n            <th class='t1'>Genre</th>\n            <th>${genres}</th>\n          </tr>\n        </table>\n          <p>ABOUT</p>\n          <p class='about'>${movie.overview}</p>\n          <div class=\"modal-btns\">\n            <button class=\"btnmodal2 addw\">REMOVE FROM LIBRARY</button>\n        </div>\n      </div>\n    `;\n\n    const modalContentWrapper = document.createElement(\"div\");\n    modalContentWrapper.innerHTML = modalContent;\n    modalContentWrapper.classList.add(\"modal-content\");\n    modal.appendChild(modalContentWrapper);\n    modal.style.display = \"flex\";\n  \n    const closeButton = modalContentWrapper.querySelector(\".modal-close\");\n    closeButton.addEventListener(\"click\", () => {\n      modal.style.display = \"none\";\n      modalContentWrapper.remove();\n    });\n\n    const wls = watchedLocalStorage.watchedId;\n  \n    const watchButton = modalContentWrapper.querySelector(\".addw\");\n\n\n      watchButton.addEventListener('click', () => {\n        const i = wls.indexOf(movie.id);\n        wls.splice(i, 1);\n        localStorage.setItem('watched', JSON.stringify(watchedLocalStorage));\n        watchButton.classList.add('btnmodal')\n        watchButton.classList.remove('btnmodal2');\n        window.location.reload();\n      });\n\n    document.addEventListener('keydown', event => {\n      if (event.key === 'Escape') {\n        modal.style.display = 'none';\n        modalContentWrapper.remove();\n      }\n    });\n\n    document.addEventListener('click', (event) => {\n      if (event.target === modal) {\n        modal.style.display = 'none';\n        modalContentWrapper.remove();\n      }\n    })\n  }\n\n  \n  export default displayMovieDetails;","import displayMovieDetails from './modal-library';\n\nconst films = document.querySelector('.films');\n\nfunction renderFilms(film) {\n    const baseUrl = 'https://image.tmdb.org/t/p/';\n    const posterSize = 'w500';\n    // 'w92', 'w185', 'w500',\n    const posterPath = film.poster_path ? `https://image.tmdb.org/t/p/w500${film.poster_path}` \n        : 'https://via.placeholder.com/500x750?text=No+poster+available';\n    const title = film.title.toUpperCase();\n    const rate = film.vote_average.toFixed(1);\n    const year = film.release_date.slice(0,4);\n    let genres = film.genres.map(genre => genre.name).join(', ');\n\n    const card = document.createElement('div');\n    card.classList.add('films__card');\n   \n    let markup = `\n    <img class='films__poster' src=${posterPath} alt=${title} loading='lazy' class='poster'>\n    <p class='films__title'>${title}</p>\n    <p class='films__details'>${genres} | ${year}</p>\n    <div class='films__rate'>${rate}</div>\n    `;\n    card.innerHTML = markup;\n\n    films.appendChild(card);\n    card.addEventListener(\"click\", () => {\n        displayMovieDetails(film);\n    })\n};\n\nexport default renderFilms;","require('dotenv').config();\nimport '../sass/index.scss';\nimport renderFilms from './librarycard';\n//import pagination from './pagination';\nimport { watchedLocalStorage, getLocalw } from \"./localstorage\";\n\n// DOM -----\nconst films = document.querySelector('.films');\nconst msn = document.querySelector('.msn');\nconst pages = document.querySelector('.pages');\nconst screen = document.querySelector('.screen');\nconst itemsPerPage = 12;\nlet currentPage = 1;\n\n//console.log(localStorage);\ngetLocalw();\n\n//console.log(watchedLocalStorage.watchedId);\nlet watchedIds = watchedLocalStorage.watchedId;\n\n\nif (localStorage.getItem('watched') === null) {\n    watchedIds = [];\n} else {\n watchedIds = JSON.parse(localStorage.getItem('watched')).watchedId;\n};\n\n\n\n// Local Storage Manage  ---\n\nconst apiKey = process.env.API_KEY;\n\n\nfunction getLocalStorage(arr, page) {\n    if (arr.length === 0 ) {\n        msn.textContent = 'No movies have been added to Watched list yet';\n    } else {\n        const startIndex = (page - 1) * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n        const itemsToDisplay = arr.slice(startIndex, endIndex);\n        films.innerHTML = '';\n        itemsToDisplay.forEach(movie_id => {\n            screen.style.display = 'flex';\n            fetch(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${apiKey}&language=en-US`)\n            .then(response => response.json())\n            .then(film => renderFilms(film))\n            .catch(error => console.error(error))\n            .finally(() => screen.style.display = 'none')\n        })\n        pagination(watchedIds, totalPagesW, currentPage);       \n    }\n}\n\n//Pages\nconst totalPagesW = Math.ceil(watchedIds.length / itemsPerPage);\n\n// Pagination\n\nconst pagesToShow = 5;\n\nconst pagination = (arr, totalPages, currentPage) => {\n    pages.innerHTML = '';\n\n    const prevBtn = document.createElement('button');\n    prevBtn.textContent = '←';\n    //prevBtn.innerHTML = markup;\n    prevBtn.classList.add('pagebtn');\n    prevBtn.disabled = currentPage === 1;\n    prevBtn.addEventListener('click', () => {\n        currentPage--;\n        getLocalStorage(arr, currentPage);\n        pagination(arr, totalPages, currentPage);\n    });\n    pages.append(prevBtn);\n\n    if( currentPage > 3) {\n        const first = document.createElement('button');\n        first.textContent = '1';\n        first.classList.add('page');\n        first.addEventListener('click', () => {\n            currentPage = 1;\n            getLocalStorage(arr, currentPage);\n            pagination(arr, totalPages, currentPage);\n        });\n        pages.append(first);\n    }\n    \n    if( currentPage > 4) {\n        const dots = document.createElement('div');\n        dots.textContent = '...';\n        dots.classList.add('dots');\n        pages.append(dots);\n    }\n\n    const st1 = Math.max(currentPage - Math.floor(pagesToShow/2), 1);\n    const st2 = Math.max(currentPage - pagesToShow + 1, 1);\n    const st3 = Math.max(currentPage - pagesToShow + 2, 1);\n\n    let startPage;\n    currentPage === totalPages ? startPage = st2 \n    : currentPage === totalPages - 1 ? startPage = st3 : startPage = st1;\n    \n    const endPage = Math.min(startPage + pagesToShow - 1, totalPages);\n    for(let i = startPage; i <= endPage; i++) {\n      const pageButton = document.createElement('button');\n      pageButton.classList.add('page');\n      pageButton.textContent = i;\n      pageButton.disabled = i === currentPage;\n\n      i === currentPage ? pageButton.classList.add('activePage') : pageButton.classList.remove('activePage');\n\n      pageButton.addEventListener('click', () => {\n        currentPage = i;\n        getLocalStorage(arr, currentPage);\n        pagination(arr, totalPages, currentPage);\n      });\n      pages.append(pageButton);\n    };\n\n    if(currentPage < totalPages - 3) {\n        const dots1 = document.createElement('div');\n        dots1.textContent = '...';\n        dots1.classList.add('dots');\n        pages.append(dots1);\n    }\n\n    if(currentPage < totalPages - 2) {\n        const last = document.createElement('button');\n        last.textContent = totalPages;\n        last.classList.add('page');\n        last.addEventListener('click', () => {\n            currentPage = totalPages;\n            getLocalStorage(arr, currentPage);\n            pagination(arr, totalPages, currentPage);\n        });\n        pages.append(last);\n    }\n\n    const nextBtn = document.createElement('button');\n    nextBtn.textContent = '→';\n    nextBtn.classList.add('pagebtn');\n    nextBtn.disabled = currentPage === totalPages;\n    nextBtn.addEventListener('click', () => {\n        currentPage++;\n        getLocalStorage(arr, currentPage);\n        pagination(arr, totalPages, currentPage);\n    });\n    pages.append(nextBtn);\n}\n\n\n// Event Listeners ---\n\n\n// Render by default\n\npages.innerHTML = '';\ngetLocalStorage(watchedIds, currentPage);\n\n\n// Tests\n/*\n const url = `https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`;\n fetch(url)\n .then(response => response.json())\n .then(data => getID(data.results))\n .catch(error => console.error(error));\n\nfunction getID(data) {\n    data.forEach(film => console.log(film.id))\n}\n*/\n\n"],"names":["$bOFJ0","parcelRequire","$2631b5b1e00936b8$export$2e2bcd8739ae039","movie","modal","document","querySelector","title","name","toUpperCase","orgtitle","original_title","popularity","toFixed","rate","vote_average","genres","map","genre","join","modalContent","poster_path","vote_count","overview","modalContentWrapper","createElement","innerHTML","classList","add","appendChild","style","display","addEventListener","remove","wls","watchedLocalStorage","watchedId","watchButton","i","indexOf","id","splice","localStorage","setItem","JSON","stringify","window","location","reload","event","key","target","$cd7e5924aa0d981e$var$films","$cd7e5924aa0d981e$export$2e2bcd8739ae039","film","posterPath","year","release_date","slice","card","markup","config","$ad8c01af5b9c46e5$var$films","$ad8c01af5b9c46e5$var$msn","$ad8c01af5b9c46e5$var$pages","$ad8c01af5b9c46e5$var$screen","getLocalw","$ad8c01af5b9c46e5$var$watchedIds","getItem","parse","$ad8c01af5b9c46e5$var$getLocalStorage","arr","page","length","textContent","startIndex","endIndex","itemsToDisplay","forEach","movie_id","fetch","then","response","json","catch","error","console","finally","$ad8c01af5b9c46e5$var$pagination","$ad8c01af5b9c46e5$var$totalPagesW","Math","ceil","totalPages","currentPage1","prevBtn","disabled","append","first","dots","st1","max","floor","$ad8c01af5b9c46e5$var$pagesToShow","st2","st3","startPage","endPage","min","pageButton","dots1","last","nextBtn"],"version":3,"file":"mylibrary.04e81932.js.map"}