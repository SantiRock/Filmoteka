{"mappings":"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","sources":["src/js/index.js","src/js/homecard.js","src/js/genres.js"],"sourcesContent":["import makeMoviesPosters from './homecard.js';\nimport '../sass/index.scss';\n\n// Variables ----\nconst media_type = 'all';\nconst time_window = 'week';\nlet currentPage = 1;\nlet totalPages = 50;\n\n// Fetch & Render ----\nfunction uploadMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/${media_type}/${time_window}?api_key=0a3a4e00d84de20a8f1b6dfc8a7cdfd5&per_page=18&page=${currentPage}`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nconst render = () => {\n  uploadMovies().then(trendingMovies => {\n    //totalPages = trendingMovies.total_pages;\n    return makeMoviesPosters(trendingMovies);\n  });\n};\n\nrender();\n\n// Paginación ----\n\nconst pages = document.querySelector('.pages');\nconst pagesToShow = 5;\n\nconst paginationH = () => {\n    pages.innerHTML = '';\n\n    const prevBtn = document.createElement('button');\n    prevBtn.textContent = '←';\n    prevBtn.classList.add('pagebtn');\n    prevBtn.disabled = currentPage === 1;\n    prevBtn.addEventListener('click', () => {\n        currentPage--;\n        render();\n        paginationH();\n    });\n    pages.append(prevBtn);\n\n    const first = document.createElement('button');\n    first.textContent = '1';\n    first.classList.add('page');\n    first.disable = currentPage === 1;\n    first.addEventListener('click', () => {\n      currentPage = 1;\n      render();\n      paginationH();\n    });\n    pages.append(first);\n\n    const dots = document.createElement('div');\n    dots.textContent = '...';\n    dots.classList.add('dots');\n    pages.append(dots);\n\n    const st1 = Math.max(currentPage - Math.floor(pagesToShow/2), 1);\n    const st2 = Math.max(currentPage - pagesToShow + 1, 1);\n    const st3 = Math.max(currentPage - pagesToShow + 2, 1);\n\n    let startPage;\n    currentPage === totalPages ? startPage = st2 \n    : currentPage === totalPages - 1 ? startPage = st3 : startPage = st1;\n\n    const endPage = Math.min(startPage + pagesToShow - 1, totalPages);\n    for(let i = startPage; i <= endPage; i++) {\n      const pageButton = document.createElement('button');\n      pageButton.classList.add('page');\n      pageButton.textContent = i;\n      pageButton.disable = i === currentPage;\n\n      i === currentPage ? pageButton.classList.add('activePage') : pageButton.classList.remove('activePage');\n\n      pageButton.addEventListener('click', () => {\n        currentPage = i;\n        render();\n        paginationH();\n      });\n      pages.append(pageButton);\n    };\n\n    const dots1 = document.createElement('div');\n    dots1.textContent = '...';\n    dots1.classList.add('dots');\n    pages.append(dots1);\n\n    const last = document.createElement('button');\n    last.textContent = totalPages;\n    last.classList.add('page');\n    last.disable = currentPage === totalPages\n    last.addEventListener('click', () => {\n      currentPage = totalPages;\n      render();\n      paginationH();\n    });\n    pages.append(last);\n\n    const nextBtn = document.createElement('button');\n    nextBtn.textContent = '→';\n    nextBtn.classList.add('pagebtn');\n    nextBtn.disabled = currentPage === totalPages;\n    nextBtn.addEventListener('click', () => {\n        currentPage++;\n        render();\n        paginationH();\n    });\n    pages.append(nextBtn);\n}\n\npaginationH();\n\nexport { render, paginationH};\n\n","import { genresArr, loadGenres } from \"./genres\";\n\nconst filmsContainer = document.querySelector('.films');\nconst moviesPerPage = 12;\n//let genresArr = [];\n\n// Cargar géneros\n/*function loadGenres() {\n  return fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=0a3a4e00d84de20a8f1b6dfc8a7cdfd5&language=en-US`\n  )\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(array => {\n      genresArr = array.genres;\n      return genresArr;\n    });\n}*/\n\n// Diseño de tarjetas (posters)\n\nfunction makeMoviesPosters(arr) {\n  filmsContainer.innerHTML = '';\n\n  if (genresArr.length === 0) {\n    loadGenres().then(() => {\n      makeMoviesPosters(arr);\n    });\n  }\n\n  const moviesToDisplay = arr.results.slice(0, moviesPerPage);\n \n  const moviesList = moviesToDisplay\n    .map(movie => {\n      const genreNames = movie.genre_ids;\n      const names = [];\n  \n      for (let i = 0; i < genreNames.length; i++) {\n        let genre = genresArr.find(g => g.id === genreNames[i]);\n        if (genre) {\n          names.push(genre.name);\n        } else { \n          continue;\n        }\n      }\n      const gNames = names.join(', ');\n\n      const posterPath = movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` \n        : 'https://via.placeholder.com/500x750?text=No+poster+available';\n\n      return `\n      <div class='films__card'>\n        <img class= \"films__poster\" src=${posterPath}></> \n        <p class= \"films__title\">${movie.title || movie.name}</p>\n        <p class= \"films__details\">${gNames} | ${\n        (movie.release_date && movie.release_date.slice(0, 4)) ||\n        movie.first_air_date.slice(0, 4)\n      }</p>\n        <div class='films__rate'>${movie.vote_average.toFixed(1)}</div>\n      </div>\n    `;\n    })\n    .join('');\n\n  filmsContainer.innerHTML = moviesList;\n}\n\nexport default makeMoviesPosters;\n\n/*\nfunction makeMoviesPosters(arr) {\n  filmsContainer.innerHTML = '';\n\n  if (genresArr.length === 0) {\n    loadGenres().then(() => {\n      makeMoviesPosters(arr);\n    });\n  }\n\n  const moviesToDisplay = arr.results.slice(0, moviesPerPage);\n  const moviesList = moviesToDisplay\n    .map(movie => {\n      const genreNames = movie.genre_ids\n        .map(genreId => {\n          const genre = genresArr.find(g => g.id === genreId);\n          return genre ? genre.name : '';\n        })\n        .join(', ');\n      return `\n      <div class='films__card'>\n        <img class= \"films__poster\" src='https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }'></> \n        <p class= \"films__title\">${movie.title || movie.name}</p>\n        <p class= \"films__details\">${genreNames} | ${\n        (movie.release_date && movie.release_date.slice(0, 4)) ||\n        movie.first_air_date.slice(0, 4)\n      }</p>\n        <div class='films__rate'>${movie.vote_average.toFixed(1)}</div>\n      </div>\n    `;\n    })\n    .join('');\n\n  filmsContainer.innerHTML = moviesList;\n}*/","let genresArr = [];\n\nfunction loadGenres() {\n    return fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=0a3a4e00d84de20a8f1b6dfc8a7cdfd5&language=en-US`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      })\n      .then(array => {\n        genresArr = array.genres;\n        return genresArr;\n      });\n  }\n\n  export { genresArr, loadGenres};"],"names":["$7cEWj","parcelRequire","$85a5f86b715fe7db$var$currentPage","$85a5f86b715fe7db$var$totalPages","$85a5f86b715fe7db$export$b3890eb0ae9dca99","fetch","then","response","ok","Error","status","json","trendingMovies","default","$85a5f86b715fe7db$var$pages","document","querySelector","$85a5f86b715fe7db$export$3e54f7e56561fb8a","innerHTML","prevBtn","createElement","textContent","classList","add","disabled","addEventListener","append","first","disable","dots","st1","Math","max","floor","$85a5f86b715fe7db$var$pagesToShow","st2","st3","startPage","endPage","min","i","pageButton","remove","dots1","last","nextBtn","$ezyJp","$53e96921ca703939$var$filmsContainer","$53e96921ca703939$export$2e2bcd8739ae039","$53e96921ca703939$var$makeMoviesPosters","arr","genresArr","length","loadGenres","moviesList","results","slice","map","movie","genreNames","genre_ids","names","genre","find","g","id","push","name","gNames","join","poster_path","title","release_date","first_air_date","vote_average","toFixed","$a9bf4680370b89e9$export$51c2025cefd26e","$a9bf4680370b89e9$export$1ea19b7b0c746bcb","array","genres"],"version":3,"file":"index.5cc12458.js.map"}